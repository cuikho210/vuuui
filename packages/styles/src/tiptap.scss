@import './base.scss';

.tiptap {
  @extend .vuuui-base;

  padding: var(--vuuui-padding);
  overflow: auto;
  font-size: inherit;

  &[readonly] {
    ul[data-type='taskList'] li label {
      pointer-events: none;
    }
  }

  h1 {
    font-size: xx-large;
  }
  h2 {
    font-size: x-large;
  }
  h3 {
    font-size: larger;
  }

  hr {
    border: none;
    border-bottom: 1px solid var(--vuuui-color-border);
  }

  code {
    border-radius: var(--vuuui-radius--half);
    background-color: var(--vuuui-color-wrapper);
    padding: var(--vuuui-padding--small);
    font-size: inherit;
  }

  pre {
    margin: var(--vuuui-padding--half) auto;
    border-radius: var(--vuuui-radius);
    background-color: var(--vuuui-color-wrapper);
    padding: var(--vuuui-padding);

    code {
      border-radius: unset;
      background-color: transparent;
      padding: unset;
    }
  }

  blockquote {
    margin: var(--vuuui-padding--half) auto;
    border-left: 3px solid var(--vuuui-color-primary);
    border-top-right-radius: var(--vuuui-radius);
    border-bottom-right-radius: var(--vuuui-radius);
    background-color: var(--vuuui-color-wrapper);
    padding: var(--vuuui-padding);
  }

  ul {
    list-style-type: none;

    li {
      p::before {
        content: '+  ';
        color: var(--vuuui-color-primary);
      }
    }

    &[data-type='taskList'] {
      li {
        display: flex;
        align-items: flex-start;
        gap: var(--vuuui-padding--half);

        label {
          span {
            $size: 1.4rem;
            display: inline-block;

            position: relative;
            cursor: pointer;
            border: 1px solid var(--vuuui-color-primary);
            border-radius: var(--vuuui-radius--half);
            width: $size;
            height: $size;
            overflow: hidden;

            &::before {
              display: flex;
              position: absolute;
              top: 0;
              right: 0;
              bottom: 0;
              left: 0;
              justify-content: center;
              align-items: center;
              visibility: hidden;
              background-color: var(--vuuui-color-primary);
              content: 'âœ”';
              color: var(--vuuui-color-text);
            }
          }

          input {
            display: none;

            &:checked + span::before {
              visibility: visible;
            }
          }
        }

        div,
        p {
          display: inline-block;

          &::before {
            display: none;
          }
        }
      }
    }
  }

  ol {
    counter-reset: item;
    list-style-type: none;

    li {
      p::before {
        counter-increment: item;
        content: counter(item) '. ';
        color: var(--vuuui-color-primary);
      }
    }
  }

  table {
    border-collapse: collapse;
    width: 100%;
    table-layout: fixed;
    overflow: hidden;

    td,
    th {
      position: relative;
      vertical-align: middle;
      border: 1px solid var(--vuuui-color-primary);
      padding: var(--vuuui-padding--half);
      min-width: var(--vuuui-padding);
    }

    th {
      background-color: rgba(var(--vuuui-color-primary--rgb), 0.4);
      font-weight: bold;
    }

    .selectedCell::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 2;
      background-color: var(--vuuui-color-border);
      pointer-events: none;
      content: '';
    }

    .column-resize-handle {
      position: absolute;
      top: 0;
      right: -2px;
      bottom: -2px;
      background-color: var(--vuuui-color-primary);
      width: 4px;
      pointer-events: none;
    }
  }

  .tableWrapper {
    overflow-x: auto;
  }
}
